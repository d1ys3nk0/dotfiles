set -g escape-time 0
set -g mouse off
set -g base-index 1
set -g pane-base-index 1
set -g history-limit 100000
set -g default-shell $SHELL
set -g default-terminal "screen-256color"
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# use vim keybindings in copy mode
setw -g mode-keys vi

# window title
set-option -g set-titles on
set-option -g set-titles-string '#S #W'
set-window-option -g automatic-rename on

# status line
set -g status-position top
set -g status-bg black
set -g status-fg white
set -g status-left ' #S '
set -g status-left-length 30
set -g status-right '%H:%M [+]'
set -g status-right-length 150
set -g window-status-format "#[fg=colour244]#[bg=colour18] #I #W "
set -g window-status-current-format "#[fg=colour7]#[bg=colour1] #I #W "

# panes
set -g pane-border-style fg=colour8
set -g pane-active-border-style fg=colour8

# behavior like screen
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# reload config button
bind r source-file ~/.tmux.conf \; display-message "Config reloaded."

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# copy to system clipboard
unbind-key -T copy-mode-vi C-v
unbind-key -T copy-mode-vi [
unbind-key -T copy-mode-vi ]
unbind-key -T copy-mode-vi Space
unbind-key -T copy-mode-vi Enter

bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi [ send-keys -X begin-selection
bind-key -T copy-mode-vi ] send-keys -X copy-selection
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

# clear screen
bind / send-keys -R \; clear-history \; send-keys "Enter"

# create window with current path
bind c new-window -c "#{pane_current_path}"

# split window bindings
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# pane resize
bind H resize-pane -L 10
bind J resize-pane -D 10
bind K resize-pane -U 10
bind L resize-pane -R 10

# pane nav
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind \ select-pane -l

bind -n S-Left select-pane -L
bind -n S-Right select-pane -R
bind -n S-Up select-pane -U
bind -n S-Down select-pane -D

# mouse mode
bind m set -g mouse on \; display 'Mouse: ON'
bind M set -g mouse off \; display 'Mouse: OFF'

# vim-tmux-navigator plugin
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# nested sessions
bind -T root F12 \
  set prefix None \;\
  set key-table off \;\
  set status-right '%H:%M [-]'\;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set status-right '%H:%M [+]'\;\
  refresh-client -S
